---
import { getCollection, type CollectionEntry } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import FormattedDate from "../../components/FormattedDate/index.astro";
import TableOfContents from "../../components/TableOfContents/index.astro";
import PostPagination from "../../components/PostPagination/index.astro";
import { SITE_TITLE } from "../../constants";
import type { BlogPost } from "../../types/BlogTypes";

export const getStaticPaths = async () => {
  const posts = await getCollection("blog");
  const sortedPosts = posts
    .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
    .map(
      (post): BlogPost => ({
        ...post,
        url: `/post/${post.slug}`,
      }),
    );

  return sortedPosts.map((post, index) => ({
    params: { slug: post.slug },
    props: {
      post,
      prev: index + 1 < sortedPosts.length ? sortedPosts[index + 1] : null,
      next: index > 0 ? sortedPosts[index - 1] : null,
    },
  }));
};

type Props = {
  post: BlogPost;
  prev: BlogPost | null;
  next: BlogPost | null;
};

const { post, prev, next } = Astro.props;

const { Content, headings } = await post.render();
---

<Layout
  title={`${post.data.title} | ${SITE_TITLE}`}
  description={post.data.description}
>
  <section class="prose relative flex max-w-3xl mx-auto mt-6 gap-4">
    <article class="mb-16 sm:mb-24 w-full min-w-[700px]">
      <header class="mb-8">
        <h1 class="text-3xl leading-tight sm:text-5xl">
          {post.data.title}
        </h1>
        <div class="mt-4 text-sm">
          <FormattedDate date={post.data.pubDate} />
        </div>
      </header>

      <div class="max-w-none prose sm:prose-lg">
        <Content />
      </div>

      <PostPagination prev={prev} next={next} />
    </article>
    <TableOfContents headings={headings} />
  </section>
</Layout>
